npx prisma db push
npx prisma db push
clear
npx prisma db seed
clear
docker ps
clear
docker ps
scrot
docker exec -it some-postgres psql -U postgres -d postgres\

exit
npx prisma migrate dev
npx prisma migrate dev
clear
docker ps 
docker container rm 419
docker container ls
docker container stop 419
docker container rm 419
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres\

clear
docker ps
npx prisma db push
psql -h 127.0.0.1 -U postgres -d postgres\

 ls
clear
npx prisma db push
clear
npx prisma migrate dev --name init
clear
docker p[s
docker ps
cleart
clear
docker ps
docker stop e8d
npx prisma migrate dev --name init
docker rm e8d
clear
npx prisma migrate dev --name init
celar
clear
npx prisma migrate dev --name init
npx prisma migrate dev --name init
npx prisma migrate dev --name init
npx prisma migrate dev --name init
npx prisma migrate dev --name init
clear
npm run dev
celar
clear
npm run dev
celar
exit
celar
npm run dev
npm run dev
clear
npm run dev
cd ..
ls
rm -r nextjs-prisma-docker
mkdir nextjs-prisma
cd nextjs-prisma
code .
celar
npx create-next-app@latest 
npx create-next-app@latest .
clear
npx create-next-app@latest .
clear
clear
clear
npm i
npm run dev
clear
npm install prisma tsx --save-dev
npm install @prisma/extension-accelerate @prisma/client
npx prisma init --db --output ../app/generated/prisma
cl4ear
clear
risma/schema.prisma
mkdir prisma
code schema.prisma
npx prisma migrate dev --name init
docker ps
ls
npx prisma migrate dev --name init
npm run dev
docker ps
docker stop 3dd
docker container stop 3dd
docker container stop 3bb
clear
clear
docker contaienr rm 3dd
docker contaienr rm 3bb
docker contaienr ls -a
docker contaienr ls 
docker ps -a
docker rm 3bb
clear
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres\

npx prisma migrate dev --name init
startx
sleep N
sleep now
sleep -P now
sleep 1
netstat -putan | grep ssh\

 lsof -i -a -p 1981\

lsof -i -a -p 5432\

lsof -i 5432
docker ps
clear
docker ps -a
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres -p 5432:5432
docker ps
docker ps
docker ps -a
dokcer rm some-postgres
docker container rm a73
celar
clear
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres\

docker ps
clear
celar
clear
lsof -i -a -p 5432 
sudo lsof -i -P -n | grep
sudo lsof -i -P -n 
sudo lsof -i -P -n | grep 5432
kill 68221
sudo kill 68221
sudo kill 68227
clear
sudo lsof -i -P -n | grep 5432
docker ps
	docker system prune -a
	docker system prune -a
docker ps
	docker prune -a
	docker container prune -a
docker container prune -a
docker container prune 
clear
docker ps
docker rm f91
docker container rm f9
docker container rm f91
docker container stop f91 
docker container rm f91
clear
docker ps
docker ps -a
celar
docker volium ls
docker volium 
docker volium
docker images
clear
docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres\

docker ps
sudo lsof -i -P -n | grep 5432
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 3000
sudo lsof -i -P -n | grep 5432
sudo lsof -i -P -n | grep 5432
sudo lsof -i -P -n | grep 3000
docker init
docker init
docker compose init
celar
clear
docker init .
clear
docker-init
docker-init
sutdown -P now
shutdown -P now
cd ..
ls
cd ..
ls
cd ..
ls
code .
pcaman -Ss lxappearance
pacman -Ss lxappearance
pacman -Sy lxappearance
lxappearance
startx
ls
cd /
ls
cd usr/
ls
cd ..
ls
clear
ls
cd dev
ls
cd
ls
cd
ls
cd ..
ls
cd ..
find theme
find ./ theme
clear
cd /usr/share/themes
ls
cd ..
ls
cd icons
ls
cd ../themes
ls
yay -Ss Flat-Rmix
ls
yay flat remix gtk
yay flat remix
clear
yay flat remix
shutdown -P now
exit
startx
rebot
reboot
exit
ssh root@91.107.184.72
cd .ssh
ls
cp ../Downloads/ge.sobelz.com_id_ed25519 .
ls
ssh root@91.107.184.72 -i ge.sobelz.com_id_ed25519
clear
ls
vim known_hosts.old
ls
vim known_hosts
celar
clear
exit
startx
smartctl
nmcli connection show
nmcli dvice wifi list
nmcli device wifi list
nmcli -t device wifi list
nmcli -f device wifi lis
nmcli -f IN-USE device wifi lis
nmcli -f IN-USE,SSID device wifi lis
clear
nmcli -f IN-USE,SSID device wifi list
nmcli device wifi list
shutdown -P niow
shutdown -P now
startx
ls
cd Develop
cd Developments
ls
cd Devlopments
ls
cd Projects
ls
npx create-strapi-app@latest
npm run dev
npm run start
ls
cd server
ls
npm start
npm run dev
clear
cd ..
shutdown -P now
logid
clear
logid
pulseaudio
pactl
pactl list cards
pipewire
pipewire
systemctl --user restart pipewire
clear
clear
clear
ls
exit
startx
cd /etc/pulse
ls
vim client.conf
pulse
lp
PulseAudio
vim client.conf
clear
vim client.conf
cd
clear
clear
pacman -Ss pipewire-pulse
pavucontrol
pacman -Ss pulseaudio
pacman -Ss pulseaudio
pacman -Ss pulseaudio | rg 17.0+r43+g3e2bb8a
pacman -Ss pulseaudio | rg 17.0
pacman -S pulseaudio
libasound
libasound
ncpamixer
load-module module-name-from-list
sudo pacman -S pulseaudio pulseaudio-alsa pulseaudio-bluetooth pavucontrol
systemctl start pulseaudio.service
systemctl --user start pulseaudio.service
systemctl --user enable pulseaudio.service
pacman -Sy bluez bluez-utilz
pacman -Sy bluez bluez-utils
sudo systemctl start bluetooth.service
sudo systemctl enable bluetooth.service
clear
lsmod | grep btusb
clear
bluetoothctl
clear
bluetoothctl
reboot
ÿ´ÿ∑ŸÉßŸÅ
exit
bluetoothctl
exit
 pacman -Ss mpv
pacman -Sy mpv
clear
exit
exit
bluetoothctl
exit
startx
top
htop
clear
xprop
code .
celar
clear
shutdown -P now
startx
shutdown -P now
cd /home/milad/Devlopments/Projects/yatak-randd
ls
code .
ls
cd wordpress
ls
cd wp-content
cd plugins
ls
clear
ls
cp ~/Downloads/woocommerce.10.1.2.zip .
sudo cp ~/Downloads/woocommerce.10.1.2.zip .
ls
unzip woocommerce.10.1.2.zip
sudo unzip woocommerce.10.1.2.zip
ls
clear
ls
rm woocommerce.10.1.2.zip
ls
clear
sudo rm woocommerce.10.1.2.zip
ls
clear
exit
suspend
systemctl suspend
exit
pacman -Ss tahoma
yay tahoma
clear
fc-match tahoma
exit
docker compose up
clear
docker compose up
clear
docker compose up
clear
docker compose down
clear
cd Devlopments/Projects
ls
cd yatak-backend
ls
clear
sudo code .
ls
code .
exit
ls -al
clear
ls -al
clear
sudo rm -r db
sudo rm -r wordpress
clear
exit
ls -al
sudo rm -r wordpress
sudo rm -r db
ls
clear
ls -al
sudo chown -R 1000:1000 wordpress\

ls -al
clear
docker image
docker images
clear
sudo chown -R 1000:1000 wordpress\

ls -al
clear
exit
ls
ls -al
sudo chown -R milad:milad wordpress db\

clear
ls
cd wordpress/wp-content/plugins
ls
cp ~/Downloads/woocommerce.10.1.2.zip
cp ~/Downloads/woocommerce.10.1.2.zip .
ls
unzip woocommerce.10.1.2.zip
ls
rm woocommerce.10.1.2.zip
clear
ls
cd wordpress/wp-content/plugins
ls
cp ~/Downloads/persian-woocommerce.zip .
ls
unzip persian-woocommerce.zip
exit
npx create-next-app@latest .
npm start
npm run dev
clear
ls
cd ..
ls
mkdir yatak-backend
ls
cd yatak-backend
code .
clear
startx
docker ps
htop
su milad
ls
su http
su
clear
ls
ls -al
clear
echo UID
echo $UID
id -u
echo $GID
clear
docker compose up
ls
sudo rm -r db
sudo rm -r wordpress
docker compose up
docker compose down
clear
docker compose build --no-cache	
clear
docker compose build --no-cache	
"${UID}:${GID}"
echo "${UID}:${GID}"
clear
docker compose build --no-cache
clear
code .env
docker compose build --no-cache
docker compose build --no-cache
clear
clear
docker compose build --no-cache
docker compose build --no-cache
docker compose build 
docker compose build
docker compose build --no-cache
docker compose up
clera
clear
docker compose up
clear
docker compose build 
docker compose build .
docker compose build --no-cache
docker ps
docker compose build --no-cache
docker compose build --no-cache
docker compose build --no-cache
docker compose build --no-cache
docker compose up
docker compose ps
docker compose down
clear
docker compose ps
rm -r db
sudo rm -r db
sudo rm -r wordpress
clear
echo id -u
id -u
id -g
docker compose ps
docker compose up
clear
sudo docker compose upp
sudo docker compose up
sudo docker compose up
    export UID=$(id -u)\
    export GID=$(id -g)
    export UID=$(id -u)\
    export GID=$(id -g)
    export UID=$(id -u)\

    export GID=$(id -g)\

clear
sudo docker compose up
clear
docker compose down
clear
ls
rm -r db
sudo rm -r db
sudo rm -r wordpress
clear
clear
docker compose up
docker compose build
docker compose build --no-cache
docker compose up
clear
docker compose up
ÿ≤ŸÉ•ÿ´ÿ¥ŸÇ
clear
docker compose up
clear
docker compose down
docker ps
docker ls
docker container 
docker   prune  -a
docker container   prune 
docker images   prune -a
docker images   prune 
docker images prune
docker images
docker images rm
docker system   prune 
docker system   prune -a
clear
rm -r wordpress
sudo rm -r db
docker compose up
ÿ≤ŸÉ•ÿ´ÿ¥ŸÇ
clear
ls
docker compose down
docker compose up
docker compose down
cleare
clear
docker compose build --no-cache
docker compose up
docker compose restart wordpress\

clear
docker compose down
docker compose up
rm -r wordpress
ls
clear
docker compose build --no-cache
docker compose up
clear
docker compose up
shutdown -P now
ls -al
su http
su http
clear
su root
clear
docker containers
docker container
docker container ls
docker container run f87e
clear
docker ps
docker run f87e32
docker start f87e32
docer start a4b1e
docker start a4b1e
clear
docker ps
ls
cd Devlopments
ls
cd Projects
ls
cd yatak-backend
ls
cd wordpress
ls
cd ..
ls
clear
ll
cd wordpress
ls
sudo -e wp-config.php
clear
clear
sudo -e wp-config.php
exit
cd ..
ls
zip -r customize-restapi.zip customize-restapi
ls
unzip customize-restapi.zip
unzip customize-restapi.zip
ls
cd customize-restapi
ls
code .
ls
cd ..
ls
rm customize-restapi.zip
zip -r customize-restapi.zip customize-restapi
ls
clear
npm i valibot
npm run dev
curl --user "API-TOKEN:k54q WUbz WpPv YEtA iIFS inxW" https://localhost:8080/wp-json/wp/v2/users
curl
curl --user "API-TOKEN:k54q WUbz WpPv YEtA iIFS inxW" http://localhost:8080/wp-json/wp/v2/users
curl --user "next-ui:k54q WUbz WpPv YEtA iIFS inxW" http://localhost:8080/wp-json/wp/v2/users
clear
exit
npm i htmlparser2
npm i node-html-parser
clear
exit
npm run dev
clear
npx next typegen
npm run dev
clear
exit
startx
docker ps
shutdown -P now
docker ps
npm run dev
clear
npm run dev
clear
npm run build
clear
npm run build
npm start
clear
exit
systemctl suspend
exit
startx
shutdown -P now
startx
shutdown -P now
blutoothcli
bluetoothcli
bluetooth
bluetoothcli
bluetoothctl
clear
bluetoothctl
startx
shutdown -P now
startx
shutdown -P now
bluetoothctl
clear
startx
shutdown -P now
pacman -Ss deno
pscman -Sy deno
pacman -Sy deno
npm start
ls
cd Devlopments/
ls
cd Projects
ls
cd denolrn
ls
cd myprj
code .
exit
ls
cd Devlopments
ls
cd Projects
ls
mkdir denolrn
cd denolrn
ls
clear
vim index.ts
deno index.ts
clear
ls
rm index.ts
ls
deno init myprj
ls
cd myprj
ls
clear
vim .
deno test
ls
deno main.ts
startx
pacman -Sy deno
deno
clear
deno upgrade
deno upgrade\
\

sudo deno upgrade
clear
shoutdown -P now
shoutdown -P now
shutdown -P now
exit
deno run dev
clear
cd ..
ls
clear
deno run start
deno run dev
deno check main.ts
cls
clear
deno bench
deno bench .
deno bench main.ts
deno bench main.ts
deno compile main.ts
clear
clear
deno compile main.ts
clear
deno compile main.ts
ls
ls -al
du -sh *
clear
myprj
./myprj
ll myprj
rm myprj
ls
clear
deno run dev
deno install npm:express
celar
deno install npm:express
npm run dev
deno run dev
clear
deno run --allow-read npm:cowsay@latest "helomilad"
deno run --allow-read npm:cowsay@latest "helomilad"
celar
clear
rm -r *
clear
deno run init .
deno init .
ls
clear
deno run dev
deno lint
deno ftm
deno ftm .
deno fmt
clear
deno eval console.log(33)
deno eval "console.log(33)"
deno doc
clear
deno run dev
ps
deno add jsr:@luca/cases
deno run dev
clear
cd ..
clear
ls
deno init --npm hono@latest
cd my-app
ls
code .
cd ..
ls
deno init --npm hono@latest
ls
cd myhono
ls
vim main.ts
cd ..
ls
deno init --npm hono@latest
ls
ls
cd my
cd myhono
ls
code .
deno run devv
deno run dev
deno serve start
deno run start
clear
deno lint
deno install
ls
clear
deno start
deno run start
clear
deno run start
clea
cd ..
ls
startx
systemctl suspend
shutdown -P now
ls
cd ..
lls
ls
cd clear
clear
ls
cd yatak-
cd yatak-randd
ls
code .
ls
vim .
nmcli device wifi show
nmcli conecction show
nmcli connection show
nmcli device wifi
nmcli device wifi con "HUAWEI nova 3i" --password "bad68f740a37"
nmcli device wifi con "HUAWEI nova 3i" -password "bad68f740a37"
nmcli device wifi con "HUAWEI nova 3i" -p "bad68f740a37"
nmcli device wifi con "HUAWEI nova 3i" -P "bad68f740a37"
nmcli device wifi con "HUAWEI nova 3i"
nmcli device wifi con "HUAWEI nova 3i" password "bad68f740a37"
nmcli device wifi conn "HUAWEI nova 3i" password "bad68f740a37"
nmcli conecction show
nmcli device wifi
clear
ls
ls
start
startx
systemctl suspend
nmcli
nmstl
clear
nmcli
nmcli wifi devices show
clear
ping sobelz.ir
ping sobelz.com
ls
npm run dev
clear
rm -r node_modules
ls
npm i
ls
clear
npm start
clear
npm run dev
systemctl suspend
shutdown -P now
startx
reboot
blutoothctl
bluetoothctl
bluetoothctl
clear
bluetoothctl
systemctl status bluetooth
systemctl restart bluetooth
sudo systemctl restart bluetooth
systemctl status bluetooth
bluetoothctl
startx
shutdown -P now
bluetoothctl
clear
bluetoothctl
clear
startx
reboot
ls
cd Devlopments
ls
cd Projects
ls
cd yatak-backend
ls
cd wordpress
ls
sudo -e wp-config.php
clear
exit
startx
httpie
clear
shutdown -P now
pacman -Syu httpie
pacman -Syu httpie
pacman -Syu httpie
pacman -Sy httpie
clear
systemctl suspend
systemctl suspend
exit
startx
pacman -Syu
pacman -Syu
pacman -Sy copyq
clear
copyq
copyq show
copyq toggle
clear
copyq toggle
copyq toggle
copyq
copyq toggle
reboot
startx
copyq toggle
copyq toggle
copyq toggle
copyq
shutdown -P now
startx
logout
cd Devlopments
ls
cd dotfiles
ls
code .
startx
clear
exit
startx
exit
reload
startx
exit
startx
numlockx
numlockx on
pacman -Ss numlockx
pacman -Sy numlockx
numlockx on
numlockx off
numlockx on
pacman -Ss Redshift
pacman -S redshift
Redshift
redshift
become
redshift -P -O 1000
redshift -P -O 25000
redshift -P -O 25000/2
node
redshift -P -O 12500
redshift -l '52.090736:5.121420' &\

clear
redshift -l '35.620940, 51.341852'
redshift -l '35.620940,51.341852'
redshift -l '35.620940:51.341852'
pkill -USR1 redshift\

pkill -USR1 redshift\

pkill -USR1 redshift\
clear
redshift -l list
redshift -l "35.620940:51.341852"
picom
clear
redshift -t
redshift -t "night"
redshift -t night
redshift -t night
redshift -t daynamic
redshift '4500K'
redshift -t DAY:NIGHT
redshift -P -O '4500'
redshift -P -O '4500'
redshift -P -O 4500
redshift -P -O 4500
randr
xrandr --auto
redshift -P -O 4500
redshift -P -O randr 4500
redshift -P -O randr "4500K"
redshift -P -O "4500K"
redshift -P -O "4500K" -m "randr"
shutdown -P nnow
shutdown -P now
startx
systemctl suspend
shutdown -P now
startx
reboot
